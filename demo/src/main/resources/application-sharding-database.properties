#dataSource
#指定库名
spring.shardingsphere.datasource.names=ds0,ds1 
#指定ds0库的数据源以及url,username,password
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://localhost:3306/position1?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull
spring.shardingsphere.datasource.ds0.username=ryy
spring.shardingsphere.datasource.ds0.password=123456

#指定ds1库的数据源以及url,username,password
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://localhost:3306/position2?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull
spring.shardingsphere.datasource.ds1.username=ryy
spring.shardingsphere.datasource.ds1.password=123456

#指定【position】职位表分库字段是ID
spring.shardingsphere.sharding.tables.position.database-strategy.inline.sharding-column=id
#指定【position】职位表分库规则是根据数据的ID对2进行取模，然后就将数据路由到那个一个库中的表
spring.shardingsphere.sharding.tables.position.database-strategy.inline.algorithm-expression=ds$->{id % 2}
#指定【position】职位表需要生成策略的字段
spring.shardingsphere.sharding.tables.position.key-generator.column=id
#指定【position】职位表id通过shardingsphere内置的SNOWFLAKE(雪花算法)规则生成ID
spring.shardingsphere.sharding.tables.position.key-generator.type=SNOWFLAKE

#指定【position_detail】职位详情表分库字段是ID
spring.shardingsphere.sharding.tables.position_detail.database-strategy.inline.sharding-column=pid
#指定【position_detail】职位详情表分库规则是根据数据的ID对2进行取模，然后就将数据路由到那个一个库中的表
spring.shardingsphere.sharding.tables.position_detail.database-strategy.inline.algorithm-expression=ds$->{pid % 2}
#指定【position_detail】职位详情表需要生成策略的字段
spring.shardingsphere.sharding.tables.position_detail.key-generator.column=id
#指定【position_detail】职位详情表id通过shardingsphere内置的SNOWFLAKE(雪花算法)规则生成ID
spring.shardingsphere.sharding.tables.position_detail.key-generator.type=SNOWFLAKE


#=============订单分库分表===========
#【b_order】表按照【company_id】企业ID分库
spring.shardingsphere.sharding.tables.b_order.database-strategy.inline.sharding-column=company_id
spring.shardingsphere.sharding.tables.b_order.database-strategy.inline.algorithm-expression=ds$->{company_id % 2}
#【b_order】表按照【id】id分表
spring.shardingsphere.sharding.tables.b_order.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.b_order.table-strategy.inline.algorithm-expression=b_order$->{id % 2}
#数据库与数据表的关系
spring.shardingsphere.sharding.tables.b_order.actual-data-nodes=ds${0..1}.b_order${0..1}
spring.shardingsphere.sharding.tables.b_order.key-generator.column=id
#指定【b_order】职位详情表id通过使用自定义(雪花算法)规则生成ID
spring.shardingsphere.sharding.tables.b_order.key-generator.type=IDGENERATOR